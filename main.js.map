{"version":3,"file":"main.js","mappings":"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","sources":["webpack://krestiki-noliki/./src/js/ui.js","webpack://krestiki-noliki/./src/js/logic.js","webpack://krestiki-noliki/./src/js/app.js"],"sourcesContent":["/* eslint-disable no-restricted-syntax */\nconst boardEl = document.getElementById('board');\nconst modalEl = document.getElementById('modal');\n\nexport function renderBoard(board) {\n  const fields = [];\n  for (const [i, row] of board.entries()) {\n    for (const [j, value] of row.entries()) {\n      fields.push(`\n        <div class=\"field ${value ? 'busy' : 'free'}\"\n            data-row=\"${i}\"\n            data-col=\"${j}\"\n            style=\"grid-row:${i + 1};grid-column:${j + 1};\"\n        >\n          ${value || ''}\n        </div>\n      `);\n    }\n  }\n  boardEl.innerHTML = fields.join('');\n}\n\nexport function showWinner(winner) {\n  const header = modalEl.getElementsByTagName('h2')[0];\n  header.textContent = `üçæ –ü–æ–±–µ–¥–∏–ª –∏–≥—Ä–æ–∫ ‚Ññ${winner + 1}! üçæ`;\n  modalEl.classList.remove('hidden');\n}\n","/* eslint-disable max-len */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable no-plusplus */\n/* eslint-disable consistent-return */\nimport { renderBoard, showWinner } from './ui';\n\nconst players = ['x', 'o'];\nlet activePlayer;\nlet fieldSize;\nlet field;\nlet move;\n\n// ----------------------------------------- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –ø–æ–ª—è\nfunction setField() {\n  const size = prompt('–í—ã–±–µ—Ä–µ—Ç–µ —Ä–∞–∑–º–µ—Ä –ø–æ–ª—è. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ - —Å–∫–æ–ª—å–∫–æ —è—á–µ–µ–∫ –±—É–¥–µ—Ç –≤ –¥–ª–∏–Ω–µ –∏ —à–∏—Ä–∏–Ω–µ (–¥–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç 3 –¥–æ 8):');\n\n  if (!size) return null;\n\n  if (size < 3 || size > 8) {\n    alert('–î–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç 3 –¥–æ 8!');\n    return setField();\n  }\n\n  return size;\n}\n\n// ----------------------------------------- –°—Ç–∞—Ä—Ç –∏–≥—Ä—ã\nexport function startGame() {\n  field = [];\n\n  const choosePlayer = prompt(`–í–∞—à —Ö–æ–¥ –ø–µ—Ä–≤—ã–π!\\n–í—ã–±–µ—Ä–µ—Ç–µ –∑–∞ –∫–æ–≥–æ –±—É–¥–µ—Ç–µ –∏–≥—Ä–∞—Ç—å (–Ω–∞–∂–º–∏—Ç–µ –• –∏–ª–∏ –û):\\n–ò–≥—Ä–æ–∫ ‚Ññ1 - ${players[0]}\\n–ò–≥—Ä–æ–∫ ‚Ññ2 - ${players[1]}`);\n\n  switch (choosePlayer) {\n    case '—Ö':\n    case 'x':\n      activePlayer = 0;\n      break;\n    case 'o':\n    case '–æ':\n      activePlayer = 1;\n      break;\n    case null:\n      return;\n    default:\n      alert('–ò–≥—Ä–æ–∫ –Ω–µ –≤—ã–±—Ä–∞–Ω! –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä–æ–∫–∏ —Ç–æ–ª—å–∫–æ \"x\" –∏–ª–∏ \"o\".');\n      return startGame();\n  }\n\n  alert(`–í—ã –≤—ã–±—Ä–∞–ª–∏ –∏–≥—Ä–æ–∫–∞ ‚Ññ${activePlayer + 1}!`);\n\n  fieldSize = setField();\n  if (!fieldSize) return;\n\n  for (let i = 0; i < fieldSize; i++) {\n    field[i] = [];\n    for (let k = 0; k < fieldSize; k++) {\n      field[i][k] = '';\n    }\n  }\n\n  move = 0;\n  renderBoard(field);\n}\n\n// ----------------------------------------- –°–º–µ–Ω–∞ –∏–≥—Ä–æ–∫–∞ –∏ —Å—á–µ—Ç —à–∞–≥–æ–≤\nfunction changeActivePlayer() {\n  activePlayer === 0 ? activePlayer = 1 : activePlayer = 0;\n  move++;\n\n  const maxMove = fieldSize * fieldSize;\n\n  if (move === maxMove) {\n    alert('–ù–∏—á—å—è!\\n–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞');\n    startGame();\n  }\n}\n\n// ----------------------------------------- –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è\nfunction isWinner() {\n  let sum = 0;\n\n  // —Ñ—É–Ω–∫—Ü–∏—è –ü–æ–±–µ–¥–∞\n  function win() {\n    if (sum === (fieldSize - 1)) showWinner(activePlayer);\n  }\n\n  // –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏\n  for (let i = 0; i < field.length; i++) {\n    for (let k = 1; k < field.length; k++) {\n      if (field[i][0] === players[activePlayer] && field[i][k] === players[activePlayer]) {\n        sum += 1;\n        win();\n      } else {\n        sum = 0;\n        break;\n      }\n    }\n  }\n\n  // –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏\n  for (let i = 0; i < field.length; i++) {\n    for (let k = 1; k < field.length; k++) {\n      if (field[0][i] === players[activePlayer] && field[k][i] === players[activePlayer]) {\n        sum += 1;\n        win();\n      } else {\n        sum = 0;\n        break;\n      }\n    }\n  }\n\n  // –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –¥–∏–∞–≥–æ–Ω–∞–ª–∏1\n  for (let i = 1; i < field.length; i++) {\n    if (field[0][0] === players[activePlayer] && field[i][i] === players[activePlayer]) {\n      sum += 1;\n      win();\n    } else {\n      sum = 0;\n    }\n  }\n\n  // –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –¥–∏–∞–≥–æ–Ω–∞–ª–∏2\n  for (let i = 1; i < field.length; i++) {\n    if (field[field.length - 1][0] === players[activePlayer] && field[(field.length - 1) - i][i] === players[activePlayer]) {\n      sum += 1;\n      win();\n    } else {\n      sum = 0;\n    }\n  }\n\n  changeActivePlayer();\n}\n\n// ----------------------------------------- –ö–ª–∏–∫ –ø–æ –∫–ª–µ—Ç–∫–µ\nexport function click(row, column) {\n  if (field.length === 0) return;\n  renderBoard(field);\n  field[row].splice([column], 1, players[activePlayer]);\n  renderBoard(field);\n  isWinner();\n}\n","/* eslint-disable no-restricted-syntax */\nimport { click, startGame } from './logic';\n\nwindow.addEventListener('load', startGame);\n\nconst boardEl = document.getElementById('board');\nconst modalEl = document.getElementById('modal');\nconst resetButtons = document.getElementsByClassName('reset');\n\nfor (const btn of resetButtons) {\n  btn.addEventListener('click', () => {\n    if (!modalEl.classList.contains('hidden')) {\n      modalEl.classList.add('hidden');\n    }\n    startGame();\n  });\n}\n\nboardEl.addEventListener('click', (event) => {\n  const targetClasses = event.target.classList;\n  const targetData = event.target.dataset;\n  if (targetClasses.contains('field') && !targetClasses.contains('busy')) {\n    click(targetData.row, targetData.col);\n  }\n});\n"],"names":["boardEl","document","getElementById","modalEl","renderBoard","board","fields","i","row","entries","j","value","push","innerHTML","join","players","activePlayer","fieldSize","field","move","setField","size","prompt","alert","startGame","k","window","addEventListener","resetButtons","getElementsByClassName","btn","classList","contains","add","event","targetClasses","target","targetData","dataset","column","col","length","splice","sum","win","winner","getElementsByTagName","textContent","remove","isWinner"],"sourceRoot":""}